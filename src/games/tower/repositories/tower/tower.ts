import { User } from '../../../../models';
import { GameResponse } from '../../../utils';
import { askEndGame, cancelEndGame, endGame, newGame } from './actions/admin/create-or-finish-game';
import type { TowerEngine } from './engine';

interface TowerRepositoryMethods {
  /////////////////////////////////////////////////////////////////// PLAYER ///////////////////////////////////////////////////////////////////
  // PLAYERS: CHANGE LOCATION OPERATIONS ///////////////////////////////////////
  // PLAYERS: MENU OPERATIONS ///////////////////////////////////////
  // PLAYERS: HIDE OPERATIONS ///////////////////////////////////////////////////////////////////
  // PLAYERS: SEARCH OPERATIONS ///////////////////////////////////////////////
  // PLAYERS: HEAL OR REVIVE OPERATIONS ///////////////////////////////////////
  // PLAYERS: HUNT OPERATIONS /////////////////////////////////////////////////
  // PLAYERS: CHEER OPERATIONS /////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////// ADMIN ///////////////////////////////////////////////////////////////////
  // ADMIN: CREATE AND SETUP OPERATIONS ////////////////////////////////////////////
  newGame(commandText: string, userRequesting: User): Promise<GameResponse>;
  askEndGame(userRequesting: User): Promise<GameResponse>;
  endGame(userRequesting: User): Promise<GameResponse>;
  cancelEndGame(userRequesting: User): Promise<GameResponse>;
  // ADMIN: ADD PLAYER OPERATIONS ////////////////////////////////////////////
  // ADMIN: WEAPONS OPERATIONS ////////////////////////////////////////////
  // ADMIN: WEAPONS OPERATIONS ////////////////////////////////////////////
  // ADMIN: LIST OPERATIONS ////////////////////////////////////////////
  // ADMIN: VISIBILITY OPERATIONS ////////////////////////////////////////////
  // ADMIN: PERFORMANCE OPERATIONS ////////////////////////////////////////////
  // ADMIN: ROUND OPERATIONS /////////////////////////////////////////////////
}

export class TowerRepository implements TowerRepositoryMethods {
  constructor(public towerGameEngine: TowerEngine) {}

  /////////////////////////////////////////////////////////////////// PLAYER ///////////////////////////////////////////////////////////////////

  // PLAYERS: CHANGE LOCATION OPERATIONS ///////////////////////////////////////

  // PLAYERS: MENU OPERATIONS ///////////////////////////////////////

  // PLAYERS: HIDE OPERATIONS ///////////////////////////////////////////////////////////////////

  // PLAYERS: SEARCH OPERATIONS ///////////////////////////////////////////////////////////////////

  // PLAYERS: HEAL OR REVIVE OPERATIONS ///////////////////////////////////////////////////////////////////

  // PLAYERS: HUNT OPERATIONS ///////////////////////////////////////////////////////////////////

  // PLAYERS: CHEER OPERATIONS /////////////////////////////////////////////////

  /////////////////////////////////////////////////////////////////// ADMIN ///////////////////////////////////////////////////////////////////

  // ADMIN: CREATE AND SETUP OPERATIONS ///////////////////////////////////////////////////////////////////
  public newGame = newGame.bind(this);
  public askEndGame = askEndGame.bind(this);
  public endGame = endGame.bind(this);
  public cancelEndGame = cancelEndGame.bind(this);

  // ADMIN: ADD PLAYER OPERATIONS ///////////////////////////////////////////////////////////////////

  // ADMIN: HEAL OR REVIVE BOSS OPERATIONS ///////////////////////////////////////////////////////////////////

  // ADMIN: LIST OPERATIONS ////////////////////////////////////////////

  // ADMIN: VISIBILITY OPERATIONS ////////////////////////////////////////////

  // ADMIN: WEAPONS OPERATIONS ////////////////////////////////////////////

  // ADMIN: PERFORMANCE OPERATIONS ////////////////////////////////////////////

  // ADMIN: ROUND OPERATIONS /////////////////////////////////////////////////
}
