version: 0.1

env:
  git-credential-helper: yes
  parameter-store:
    DOCKER_HUB_USER: '/devops/shared/DOCKER_HUB_USER'
    DOCKER_HUB_PASSWORD: '/devops/shared/DOCKER_HUB_PASSWORD'

phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - n 16
      - npm update -g npm
      - npm install -g yarn
      - curl -sL https://sentry.io/get-cli/ | bash
      - aws --version
      - node -v
      - yarn -v
      - sentry-cli --version
      - yarn install --frozen-lockfile --production=false
  pre_build:
    commands:
      - export APP_BUILD_VERSION=${CODEBUILD_RESOLVED_SOURCE_VERSION}__$(date -u '+%Y-%m-%dT%T+00:00')
      - export PKG_VERSION=$(node -p "require('./package.json').version")
      - export SENTRY_VERSION=${ENV}-${PKG_VERSION}_BUILD_${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - echo $APP_BUILD_VERSION > ./src/.version
      - cat ./src/.version
      - $(aws ecr get-login --region us-east-1 --no-include-email)
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - chmod +x ./codebuild-git-wrapper.sh
      - ./codebuild-git-wrapper.sh "$REPO_URL" "$REPO_BRANCH"
      - echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USER --password-stdin
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > build.json
      - sentry-cli releases --org=x-team --project=xhq-api new $SENTRY_VERSION
      - sentry-cli releases --org=x-team --project=xhq-api set-commits --auto $SENTRY_VERSION
      - sentry-cli releases --org=x-team --project=xhq-api finalize $SENTRY_VERSION
      - sentry-cli releases --org=x-team --project=xhq-api deploys $SENTRY_VERSION new -e $ENV
artifacts:
  files:
    - build.json
